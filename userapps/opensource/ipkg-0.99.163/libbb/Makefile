# Makefile.in generated by automake 1.9.5 from Makefile.am.
# libbb/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



SOURCES = $(libbb_la_SOURCES)

srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/ipkg
pkglibdir = $(libdir)/ipkg
pkgincludedir = $(includedir)/ipkg
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = mips-unknown-elf
subdir = libbb
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libbb_la_LIBADD =
am_libbb_la_OBJECTS = libbb_la-gz_open.lo libbb_la-unzip.lo \
	libbb_la-wfopen.lo libbb_la-unarchive.lo libbb_la-copy_file.lo \
	libbb_la-copy_file_chunk.lo libbb_la-error_msg.lo \
	libbb_la-error_msg_and_die.lo libbb_la-perror_msg.lo \
	libbb_la-perror_msg_and_die.lo libbb_la-xreadlink.lo \
	libbb_la-concat_path_file.lo libbb_la-ask_confirmation.lo \
	libbb_la-verror_msg.lo libbb_la-vperror_msg.lo \
	libbb_la-xfuncs.lo libbb_la-messages.lo \
	libbb_la-last_char_is.lo libbb_la-make_directory.lo \
	libbb_la-safe_strncpy.lo libbb_la-parse_mode.lo \
	libbb_la-time_string.lo libbb_la-all_read.lo \
	libbb_la-mode_string.lo
libbb_la_OBJECTS = $(am_libbb_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libbb_la_SOURCES)
DIST_SOURCES = $(libbb_la_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/brett/livebox/trunk/userapps/opensource/ipkg/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/brett/livebox/trunk/userapps/opensource/ipkg/missing --run tar
AR = mips-uclibc-ar
AUTOCONF = ${SHELL} /home/brett/livebox/trunk/userapps/opensource/ipkg/missing --run autoconf
AUTOHEADER = ${SHELL} /home/brett/livebox/trunk/userapps/opensource/ipkg/missing --run autoheader
AUTOMAKE = ${SHELL} /home/brett/livebox/trunk/userapps/opensource/ipkg/missing --run automake-1.9
AWK = gawk
CC = mips-uclibc-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = mips-uclibc-gcc -E
CPPFLAGS = 
CXX = mips-uclibc-g++
CXXCPP = mips-uclibc-g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = f95
FFLAGS = -g -O2
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/brett/livebox/trunk/userapps/opensource/ipkg/missing --run makeinfo
OBJEXT = o
PACKAGE = ipkg
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
RANLIB = mips-uclibc-ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = mips-uclibc-strip
VERSION = 0.99.163
ac_ct_AR = 
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_F77 = f95
ac_ct_RANLIB = 
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = mips-unknown-elf
host_alias = mips
host_cpu = mips
host_os = elf
host_vendor = unknown
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/brett/livebox/trunk/userapps/opensource/ipkg/install-sh
ipkglibdir = /usr/lib
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /home/brett/livebox/trunk/targets/fs.src
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
HOST_CPU = mips
BUILD_CPU = i686
ALL_CFLAGS = -g -O -Wall -DHOST_CPU_STR=\"mips\" -DBUILD_CPU=i686
noinst_LTLIBRARIES = libbb.la
libbb_la_SOURCES = gz_open.c \
	libbb.h \
	unzip.c \
	wfopen.c \
	unarchive.c \
	copy_file.c \
	copy_file_chunk.c \
	error_msg.c error_msg_and_die.c \
	perror_msg.c perror_msg_and_die.c \
	xreadlink.c \
	concat_path_file.c \
	ask_confirmation.c \
	verror_msg.c vperror_msg.c \
	xfuncs.c messages.c \
	last_char_is.c \
	make_directory.c \
	safe_strncpy.c \
	parse_mode.c \
	time_string.c \
	all_read.c \
	mode_string.c

libbb_la_CFLAGS = $(ALL_CFLAGS)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  libbb/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  libbb/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libbb.la: $(libbb_la_OBJECTS) $(libbb_la_DEPENDENCIES) 
	$(LINK)  $(libbb_la_LDFLAGS) $(libbb_la_OBJECTS) $(libbb_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libbb_la-all_read.Plo
include ./$(DEPDIR)/libbb_la-ask_confirmation.Plo
include ./$(DEPDIR)/libbb_la-concat_path_file.Plo
include ./$(DEPDIR)/libbb_la-copy_file.Plo
include ./$(DEPDIR)/libbb_la-copy_file_chunk.Plo
include ./$(DEPDIR)/libbb_la-error_msg.Plo
include ./$(DEPDIR)/libbb_la-error_msg_and_die.Plo
include ./$(DEPDIR)/libbb_la-gz_open.Plo
include ./$(DEPDIR)/libbb_la-last_char_is.Plo
include ./$(DEPDIR)/libbb_la-make_directory.Plo
include ./$(DEPDIR)/libbb_la-messages.Plo
include ./$(DEPDIR)/libbb_la-mode_string.Plo
include ./$(DEPDIR)/libbb_la-parse_mode.Plo
include ./$(DEPDIR)/libbb_la-perror_msg.Plo
include ./$(DEPDIR)/libbb_la-perror_msg_and_die.Plo
include ./$(DEPDIR)/libbb_la-safe_strncpy.Plo
include ./$(DEPDIR)/libbb_la-time_string.Plo
include ./$(DEPDIR)/libbb_la-unarchive.Plo
include ./$(DEPDIR)/libbb_la-unzip.Plo
include ./$(DEPDIR)/libbb_la-verror_msg.Plo
include ./$(DEPDIR)/libbb_la-vperror_msg.Plo
include ./$(DEPDIR)/libbb_la-wfopen.Plo
include ./$(DEPDIR)/libbb_la-xfuncs.Plo
include ./$(DEPDIR)/libbb_la-xreadlink.Plo

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libbb_la-gz_open.lo: gz_open.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -MT libbb_la-gz_open.lo -MD -MP -MF "$(DEPDIR)/libbb_la-gz_open.Tpo" -c -o libbb_la-gz_open.lo `test -f 'gz_open.c' || echo '$(srcdir)/'`gz_open.c; \
	then mv -f "$(DEPDIR)/libbb_la-gz_open.Tpo" "$(DEPDIR)/libbb_la-gz_open.Plo"; else rm -f "$(DEPDIR)/libbb_la-gz_open.Tpo"; exit 1; fi
#	source='gz_open.c' object='libbb_la-gz_open.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -c -o libbb_la-gz_open.lo `test -f 'gz_open.c' || echo '$(srcdir)/'`gz_open.c

libbb_la-unzip.lo: unzip.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -MT libbb_la-unzip.lo -MD -MP -MF "$(DEPDIR)/libbb_la-unzip.Tpo" -c -o libbb_la-unzip.lo `test -f 'unzip.c' || echo '$(srcdir)/'`unzip.c; \
	then mv -f "$(DEPDIR)/libbb_la-unzip.Tpo" "$(DEPDIR)/libbb_la-unzip.Plo"; else rm -f "$(DEPDIR)/libbb_la-unzip.Tpo"; exit 1; fi
#	source='unzip.c' object='libbb_la-unzip.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -c -o libbb_la-unzip.lo `test -f 'unzip.c' || echo '$(srcdir)/'`unzip.c

libbb_la-wfopen.lo: wfopen.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -MT libbb_la-wfopen.lo -MD -MP -MF "$(DEPDIR)/libbb_la-wfopen.Tpo" -c -o libbb_la-wfopen.lo `test -f 'wfopen.c' || echo '$(srcdir)/'`wfopen.c; \
	then mv -f "$(DEPDIR)/libbb_la-wfopen.Tpo" "$(DEPDIR)/libbb_la-wfopen.Plo"; else rm -f "$(DEPDIR)/libbb_la-wfopen.Tpo"; exit 1; fi
#	source='wfopen.c' object='libbb_la-wfopen.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -c -o libbb_la-wfopen.lo `test -f 'wfopen.c' || echo '$(srcdir)/'`wfopen.c

libbb_la-unarchive.lo: unarchive.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -MT libbb_la-unarchive.lo -MD -MP -MF "$(DEPDIR)/libbb_la-unarchive.Tpo" -c -o libbb_la-unarchive.lo `test -f 'unarchive.c' || echo '$(srcdir)/'`unarchive.c; \
	then mv -f "$(DEPDIR)/libbb_la-unarchive.Tpo" "$(DEPDIR)/libbb_la-unarchive.Plo"; else rm -f "$(DEPDIR)/libbb_la-unarchive.Tpo"; exit 1; fi
#	source='unarchive.c' object='libbb_la-unarchive.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -c -o libbb_la-unarchive.lo `test -f 'unarchive.c' || echo '$(srcdir)/'`unarchive.c

libbb_la-copy_file.lo: copy_file.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -MT libbb_la-copy_file.lo -MD -MP -MF "$(DEPDIR)/libbb_la-copy_file.Tpo" -c -o libbb_la-copy_file.lo `test -f 'copy_file.c' || echo '$(srcdir)/'`copy_file.c; \
	then mv -f "$(DEPDIR)/libbb_la-copy_file.Tpo" "$(DEPDIR)/libbb_la-copy_file.Plo"; else rm -f "$(DEPDIR)/libbb_la-copy_file.Tpo"; exit 1; fi
#	source='copy_file.c' object='libbb_la-copy_file.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -c -o libbb_la-copy_file.lo `test -f 'copy_file.c' || echo '$(srcdir)/'`copy_file.c

libbb_la-copy_file_chunk.lo: copy_file_chunk.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -MT libbb_la-copy_file_chunk.lo -MD -MP -MF "$(DEPDIR)/libbb_la-copy_file_chunk.Tpo" -c -o libbb_la-copy_file_chunk.lo `test -f 'copy_file_chunk.c' || echo '$(srcdir)/'`copy_file_chunk.c; \
	then mv -f "$(DEPDIR)/libbb_la-copy_file_chunk.Tpo" "$(DEPDIR)/libbb_la-copy_file_chunk.Plo"; else rm -f "$(DEPDIR)/libbb_la-copy_file_chunk.Tpo"; exit 1; fi
#	source='copy_file_chunk.c' object='libbb_la-copy_file_chunk.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -c -o libbb_la-copy_file_chunk.lo `test -f 'copy_file_chunk.c' || echo '$(srcdir)/'`copy_file_chunk.c

libbb_la-error_msg.lo: error_msg.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -MT libbb_la-error_msg.lo -MD -MP -MF "$(DEPDIR)/libbb_la-error_msg.Tpo" -c -o libbb_la-error_msg.lo `test -f 'error_msg.c' || echo '$(srcdir)/'`error_msg.c; \
	then mv -f "$(DEPDIR)/libbb_la-error_msg.Tpo" "$(DEPDIR)/libbb_la-error_msg.Plo"; else rm -f "$(DEPDIR)/libbb_la-error_msg.Tpo"; exit 1; fi
#	source='error_msg.c' object='libbb_la-error_msg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -c -o libbb_la-error_msg.lo `test -f 'error_msg.c' || echo '$(srcdir)/'`error_msg.c

libbb_la-error_msg_and_die.lo: error_msg_and_die.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -MT libbb_la-error_msg_and_die.lo -MD -MP -MF "$(DEPDIR)/libbb_la-error_msg_and_die.Tpo" -c -o libbb_la-error_msg_and_die.lo `test -f 'error_msg_and_die.c' || echo '$(srcdir)/'`error_msg_and_die.c; \
	then mv -f "$(DEPDIR)/libbb_la-error_msg_and_die.Tpo" "$(DEPDIR)/libbb_la-error_msg_and_die.Plo"; else rm -f "$(DEPDIR)/libbb_la-error_msg_and_die.Tpo"; exit 1; fi
#	source='error_msg_and_die.c' object='libbb_la-error_msg_and_die.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -c -o libbb_la-error_msg_and_die.lo `test -f 'error_msg_and_die.c' || echo '$(srcdir)/'`error_msg_and_die.c

libbb_la-perror_msg.lo: perror_msg.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -MT libbb_la-perror_msg.lo -MD -MP -MF "$(DEPDIR)/libbb_la-perror_msg.Tpo" -c -o libbb_la-perror_msg.lo `test -f 'perror_msg.c' || echo '$(srcdir)/'`perror_msg.c; \
	then mv -f "$(DEPDIR)/libbb_la-perror_msg.Tpo" "$(DEPDIR)/libbb_la-perror_msg.Plo"; else rm -f "$(DEPDIR)/libbb_la-perror_msg.Tpo"; exit 1; fi
#	source='perror_msg.c' object='libbb_la-perror_msg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -c -o libbb_la-perror_msg.lo `test -f 'perror_msg.c' || echo '$(srcdir)/'`perror_msg.c

libbb_la-perror_msg_and_die.lo: perror_msg_and_die.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -MT libbb_la-perror_msg_and_die.lo -MD -MP -MF "$(DEPDIR)/libbb_la-perror_msg_and_die.Tpo" -c -o libbb_la-perror_msg_and_die.lo `test -f 'perror_msg_and_die.c' || echo '$(srcdir)/'`perror_msg_and_die.c; \
	then mv -f "$(DEPDIR)/libbb_la-perror_msg_and_die.Tpo" "$(DEPDIR)/libbb_la-perror_msg_and_die.Plo"; else rm -f "$(DEPDIR)/libbb_la-perror_msg_and_die.Tpo"; exit 1; fi
#	source='perror_msg_and_die.c' object='libbb_la-perror_msg_and_die.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -c -o libbb_la-perror_msg_and_die.lo `test -f 'perror_msg_and_die.c' || echo '$(srcdir)/'`perror_msg_and_die.c

libbb_la-xreadlink.lo: xreadlink.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -MT libbb_la-xreadlink.lo -MD -MP -MF "$(DEPDIR)/libbb_la-xreadlink.Tpo" -c -o libbb_la-xreadlink.lo `test -f 'xreadlink.c' || echo '$(srcdir)/'`xreadlink.c; \
	then mv -f "$(DEPDIR)/libbb_la-xreadlink.Tpo" "$(DEPDIR)/libbb_la-xreadlink.Plo"; else rm -f "$(DEPDIR)/libbb_la-xreadlink.Tpo"; exit 1; fi
#	source='xreadlink.c' object='libbb_la-xreadlink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -c -o libbb_la-xreadlink.lo `test -f 'xreadlink.c' || echo '$(srcdir)/'`xreadlink.c

libbb_la-concat_path_file.lo: concat_path_file.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -MT libbb_la-concat_path_file.lo -MD -MP -MF "$(DEPDIR)/libbb_la-concat_path_file.Tpo" -c -o libbb_la-concat_path_file.lo `test -f 'concat_path_file.c' || echo '$(srcdir)/'`concat_path_file.c; \
	then mv -f "$(DEPDIR)/libbb_la-concat_path_file.Tpo" "$(DEPDIR)/libbb_la-concat_path_file.Plo"; else rm -f "$(DEPDIR)/libbb_la-concat_path_file.Tpo"; exit 1; fi
#	source='concat_path_file.c' object='libbb_la-concat_path_file.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -c -o libbb_la-concat_path_file.lo `test -f 'concat_path_file.c' || echo '$(srcdir)/'`concat_path_file.c

libbb_la-ask_confirmation.lo: ask_confirmation.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -MT libbb_la-ask_confirmation.lo -MD -MP -MF "$(DEPDIR)/libbb_la-ask_confirmation.Tpo" -c -o libbb_la-ask_confirmation.lo `test -f 'ask_confirmation.c' || echo '$(srcdir)/'`ask_confirmation.c; \
	then mv -f "$(DEPDIR)/libbb_la-ask_confirmation.Tpo" "$(DEPDIR)/libbb_la-ask_confirmation.Plo"; else rm -f "$(DEPDIR)/libbb_la-ask_confirmation.Tpo"; exit 1; fi
#	source='ask_confirmation.c' object='libbb_la-ask_confirmation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -c -o libbb_la-ask_confirmation.lo `test -f 'ask_confirmation.c' || echo '$(srcdir)/'`ask_confirmation.c

libbb_la-verror_msg.lo: verror_msg.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -MT libbb_la-verror_msg.lo -MD -MP -MF "$(DEPDIR)/libbb_la-verror_msg.Tpo" -c -o libbb_la-verror_msg.lo `test -f 'verror_msg.c' || echo '$(srcdir)/'`verror_msg.c; \
	then mv -f "$(DEPDIR)/libbb_la-verror_msg.Tpo" "$(DEPDIR)/libbb_la-verror_msg.Plo"; else rm -f "$(DEPDIR)/libbb_la-verror_msg.Tpo"; exit 1; fi
#	source='verror_msg.c' object='libbb_la-verror_msg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -c -o libbb_la-verror_msg.lo `test -f 'verror_msg.c' || echo '$(srcdir)/'`verror_msg.c

libbb_la-vperror_msg.lo: vperror_msg.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -MT libbb_la-vperror_msg.lo -MD -MP -MF "$(DEPDIR)/libbb_la-vperror_msg.Tpo" -c -o libbb_la-vperror_msg.lo `test -f 'vperror_msg.c' || echo '$(srcdir)/'`vperror_msg.c; \
	then mv -f "$(DEPDIR)/libbb_la-vperror_msg.Tpo" "$(DEPDIR)/libbb_la-vperror_msg.Plo"; else rm -f "$(DEPDIR)/libbb_la-vperror_msg.Tpo"; exit 1; fi
#	source='vperror_msg.c' object='libbb_la-vperror_msg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -c -o libbb_la-vperror_msg.lo `test -f 'vperror_msg.c' || echo '$(srcdir)/'`vperror_msg.c

libbb_la-xfuncs.lo: xfuncs.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -MT libbb_la-xfuncs.lo -MD -MP -MF "$(DEPDIR)/libbb_la-xfuncs.Tpo" -c -o libbb_la-xfuncs.lo `test -f 'xfuncs.c' || echo '$(srcdir)/'`xfuncs.c; \
	then mv -f "$(DEPDIR)/libbb_la-xfuncs.Tpo" "$(DEPDIR)/libbb_la-xfuncs.Plo"; else rm -f "$(DEPDIR)/libbb_la-xfuncs.Tpo"; exit 1; fi
#	source='xfuncs.c' object='libbb_la-xfuncs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -c -o libbb_la-xfuncs.lo `test -f 'xfuncs.c' || echo '$(srcdir)/'`xfuncs.c

libbb_la-messages.lo: messages.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -MT libbb_la-messages.lo -MD -MP -MF "$(DEPDIR)/libbb_la-messages.Tpo" -c -o libbb_la-messages.lo `test -f 'messages.c' || echo '$(srcdir)/'`messages.c; \
	then mv -f "$(DEPDIR)/libbb_la-messages.Tpo" "$(DEPDIR)/libbb_la-messages.Plo"; else rm -f "$(DEPDIR)/libbb_la-messages.Tpo"; exit 1; fi
#	source='messages.c' object='libbb_la-messages.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -c -o libbb_la-messages.lo `test -f 'messages.c' || echo '$(srcdir)/'`messages.c

libbb_la-last_char_is.lo: last_char_is.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -MT libbb_la-last_char_is.lo -MD -MP -MF "$(DEPDIR)/libbb_la-last_char_is.Tpo" -c -o libbb_la-last_char_is.lo `test -f 'last_char_is.c' || echo '$(srcdir)/'`last_char_is.c; \
	then mv -f "$(DEPDIR)/libbb_la-last_char_is.Tpo" "$(DEPDIR)/libbb_la-last_char_is.Plo"; else rm -f "$(DEPDIR)/libbb_la-last_char_is.Tpo"; exit 1; fi
#	source='last_char_is.c' object='libbb_la-last_char_is.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -c -o libbb_la-last_char_is.lo `test -f 'last_char_is.c' || echo '$(srcdir)/'`last_char_is.c

libbb_la-make_directory.lo: make_directory.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -MT libbb_la-make_directory.lo -MD -MP -MF "$(DEPDIR)/libbb_la-make_directory.Tpo" -c -o libbb_la-make_directory.lo `test -f 'make_directory.c' || echo '$(srcdir)/'`make_directory.c; \
	then mv -f "$(DEPDIR)/libbb_la-make_directory.Tpo" "$(DEPDIR)/libbb_la-make_directory.Plo"; else rm -f "$(DEPDIR)/libbb_la-make_directory.Tpo"; exit 1; fi
#	source='make_directory.c' object='libbb_la-make_directory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -c -o libbb_la-make_directory.lo `test -f 'make_directory.c' || echo '$(srcdir)/'`make_directory.c

libbb_la-safe_strncpy.lo: safe_strncpy.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -MT libbb_la-safe_strncpy.lo -MD -MP -MF "$(DEPDIR)/libbb_la-safe_strncpy.Tpo" -c -o libbb_la-safe_strncpy.lo `test -f 'safe_strncpy.c' || echo '$(srcdir)/'`safe_strncpy.c; \
	then mv -f "$(DEPDIR)/libbb_la-safe_strncpy.Tpo" "$(DEPDIR)/libbb_la-safe_strncpy.Plo"; else rm -f "$(DEPDIR)/libbb_la-safe_strncpy.Tpo"; exit 1; fi
#	source='safe_strncpy.c' object='libbb_la-safe_strncpy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -c -o libbb_la-safe_strncpy.lo `test -f 'safe_strncpy.c' || echo '$(srcdir)/'`safe_strncpy.c

libbb_la-parse_mode.lo: parse_mode.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -MT libbb_la-parse_mode.lo -MD -MP -MF "$(DEPDIR)/libbb_la-parse_mode.Tpo" -c -o libbb_la-parse_mode.lo `test -f 'parse_mode.c' || echo '$(srcdir)/'`parse_mode.c; \
	then mv -f "$(DEPDIR)/libbb_la-parse_mode.Tpo" "$(DEPDIR)/libbb_la-parse_mode.Plo"; else rm -f "$(DEPDIR)/libbb_la-parse_mode.Tpo"; exit 1; fi
#	source='parse_mode.c' object='libbb_la-parse_mode.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -c -o libbb_la-parse_mode.lo `test -f 'parse_mode.c' || echo '$(srcdir)/'`parse_mode.c

libbb_la-time_string.lo: time_string.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -MT libbb_la-time_string.lo -MD -MP -MF "$(DEPDIR)/libbb_la-time_string.Tpo" -c -o libbb_la-time_string.lo `test -f 'time_string.c' || echo '$(srcdir)/'`time_string.c; \
	then mv -f "$(DEPDIR)/libbb_la-time_string.Tpo" "$(DEPDIR)/libbb_la-time_string.Plo"; else rm -f "$(DEPDIR)/libbb_la-time_string.Tpo"; exit 1; fi
#	source='time_string.c' object='libbb_la-time_string.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -c -o libbb_la-time_string.lo `test -f 'time_string.c' || echo '$(srcdir)/'`time_string.c

libbb_la-all_read.lo: all_read.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -MT libbb_la-all_read.lo -MD -MP -MF "$(DEPDIR)/libbb_la-all_read.Tpo" -c -o libbb_la-all_read.lo `test -f 'all_read.c' || echo '$(srcdir)/'`all_read.c; \
	then mv -f "$(DEPDIR)/libbb_la-all_read.Tpo" "$(DEPDIR)/libbb_la-all_read.Plo"; else rm -f "$(DEPDIR)/libbb_la-all_read.Tpo"; exit 1; fi
#	source='all_read.c' object='libbb_la-all_read.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -c -o libbb_la-all_read.lo `test -f 'all_read.c' || echo '$(srcdir)/'`all_read.c

libbb_la-mode_string.lo: mode_string.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -MT libbb_la-mode_string.lo -MD -MP -MF "$(DEPDIR)/libbb_la-mode_string.Tpo" -c -o libbb_la-mode_string.lo `test -f 'mode_string.c' || echo '$(srcdir)/'`mode_string.c; \
	then mv -f "$(DEPDIR)/libbb_la-mode_string.Tpo" "$(DEPDIR)/libbb_la-mode_string.Plo"; else rm -f "$(DEPDIR)/libbb_la-mode_string.Tpo"; exit 1; fi
#	source='mode_string.c' object='libbb_la-mode_string.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbb_la_CFLAGS) $(CFLAGS) -c -o libbb_la-mode_string.lo `test -f 'mode_string.c' || echo '$(srcdir)/'`mode_string.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-info-am

#libbb_la_LDFLAGS = -static
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
