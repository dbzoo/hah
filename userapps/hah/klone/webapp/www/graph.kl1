<%! /* -*- mode:c;coding:utf-8; -*- */
#include "minIni.h"
#include "login.h"
#include "const.h"
#include <string.h>

#define sizearray(x) (sizeof(x) / sizeof(x[0]))
static int reboot = 0;

struct _datastream {
         char feed[8];
	 char id[4];
	 char tag[20];
} ds[32];

static struct {
	 char apikey[65];
	 char feedid[8];
	 int count;
} ini;

static void loadDynINI(char *key, int id, char *location, int size) {
	 char buff[100];
	 sprintf(buff,"%s%d",key,id);
	 ini_gets("pachube", buff, "", location, size, con.inifile);
}

static void readIni() {
	 ini_gets("pachube","apikey","",ini.apikey,sizeof(ini.apikey),con.inifile);
	 ini_gets("pachube","feedid","",ini.feedid,sizeof(ini.feedid),con.inifile);
	 // Comma separated list of ids
	 ini.count = ini_getl("pachube", "count", 0, con.inifile);

	 if(ini.count > sizearray(ds)) {
		  ini.count = sizearray(ds);
	 }
	 int i;
	 for(i=0; i < ini.count; i++) {
                  loadDynINI("feed", i, ds[i].feed, sizeof(ds[i].feed));
		  loadDynINI("id", i, ds[i].id, sizeof(ds[i].id));
		  loadDynINI("tag", i, ds[i].tag, sizeof(ds[i].tag));					 
                  if (strcmp(ds[i].feed, "") == 0) { 
                         strcpy(ds[i].feed, ini.feedid); 
                  }

	 }
}

/**********************************************************************/
%>
<%
  REQUIRE_AUTH(SCRIPT_NAME);
  readIni();
int act = 0;
const char *action = request_get_arg(request,"action");
if(action) {
	 act = atoi(action);
}
%>
<html>
<head>
<%@include component/style.kl1%>
<script type="text/javascript" src="http://www.google.com/jsapi"></script>
<script type="text/javascript">
	 google.load('visualization','1',{packages:['annotatedtimeline']});
function drawVisualization(){
	var headID = document.getElementsByTagName('head')[0];
	var newScript = document.createElement('script');
	newScript.type = 'text/javascript';
	newScript.src = 'http://apps.pachube.com/history/archive_json.php?f=<%= ds[act].feed %>&d=<%= ds[act].id %>&callback=process';
	headID.appendChild(newScript);
}

function process(archive){
	var d; var val;
	var data = new google.visualization.DataTable();
	data.addColumn('datetime', 'Date');
	data.addColumn('number', 'Datastream value');
	for ( var i in archive['time'] ) {
		var thisrow = data.addRow();
		var timestamp = archive['time'][i];
		var ts_parts = timestamp.split('T');
		var d_parts = ts_parts[0].split('-');
		var t_parts = ts_parts[1].split(':');
		d = new Date(parseInt(d_parts[0],10), parseInt(d_parts[1],10)-1 ,parseInt(d_parts[2],10), parseInt(t_parts[0],10),parseInt(t_parts[1],10), parseInt(t_parts[2],10) );
		val = parseFloat(archive['value'][i]);
		data.setValue(thisrow, 0, d);
		data.setValue(thisrow, 1, val);
	}
	var chart = new google.visualization.AnnotatedTimeLine(document.getElementById('visualization'));
	chart.draw(data, {displayAnnotations:true,thickness:1,displayExactValues:true,fill:20,colors:['#FF0066']}); 
}

google.setOnLoadCallback(drawVisualization);
</script>
</head>
<body class="gui">

<div id="wrapper">
<div id="content">

<%@include component/heading.kl1%>

<div id="main">
<div id="contents">
<br/>
<h2>Pachube Graphs</h2><div>
<%
	 if(ini.count == 0) {
%>
  Pachube datastreams are not configured: <a href="/pachube.kl1">setup</a>
</div>
<br/>
<%
	 } else {
%>
<form name="graph" action="<%= SCRIPT_NAME %>" method="post">
<p>	 Graph datastream: <select name="action" size="1" onChange="graph.submit()">
<%
int i=0;
for(i=0;i<ini.count;i++) {  
    io_printf(out, "<option value=\"%d\"", i);
    if (i == act) { io_printf(out, " selected"); }
    io_printf(out, "> %s - %s - %s </option>\n", ds[act].feed, ds[i].id, ds[i].tag);
}
%>
</select>
</p>
<fieldset>
<%
io_printf(out, "<legend>Feed %s : Datastream %s : %s </legend>", ds[act].feed, ds[act].id, ds[act].tag);
%>
    <div id="visualization" style="width: 750px; height: 340px;"></div>
</fieldset>
</div>
<br/>
<div class="submitFooter">
<input type="submit" value="Refresh"/>
</div>
</form>
<%
 }
%>

</div>
</div>

<div id="floatKiller"></div>
<%@include component/statusinfo.kl1%>

</div>
</div>

</body>
</html>
