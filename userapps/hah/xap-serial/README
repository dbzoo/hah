Serial Communications Schema - Serial Communications v1.2

This describes a xAP message schema for basic serial communications.
Unless otherwise stated a name/value pair is assumed to be mandatory.

Class=Serial.Comms

INPUT MESSAGES

Serial.Setup
{
Port=(ie /dev/ttyUSB0)
Baud=(bits per second e.g. 9600)
Stop=(1 | 2)
DataBits=( 5 | 6 | 7 | 8)
Parity=(none | even | odd | mark | space)
Flow=(None | XOnXOff | Hardware)
}

Serial.Send
{
Port=(ie /dev/ttyUSB0)
Data=(Data to be sent on the serial port)
}

Serial.Close
{
Port=(ie /dev/ttyUSB0)
}

OUTPUT MESSAGES

Serial.Received
{
Port=(ie /dev/ttyUSB0)
Data=(Data received on the serial port)
}

Serial.Error
{
text=
}


= EXAMPLES =

== Setting up a SERIAL PORT ==

xap-header
{
v=12
hop=1
uid=FF00DD00
class=serial.comms
source=dbzoo.test.demo
target=dbzoo.livebox.serial
}
serial.setup
{
port=/dev/ttyS0
baud=9600
stop=1
databits=8
parity=none
flow=none
}

== Sending a MESSAGE ==

xap-header
{
v=12
hop=1
uid=FF00DD00
class=serial.comms
source=dbzoo.test.demo
target=dbzoo.livebox.serial
}
serial.send
{
port=/dev/ttyS0
data=There
}

